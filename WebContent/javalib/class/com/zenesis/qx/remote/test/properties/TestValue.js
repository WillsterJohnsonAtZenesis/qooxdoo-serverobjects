/**
 * Class generated by Qoxodoo Server Objects com.zenesis.qx.remote.ClassWriter
 * 
 */

qx.Class.define("com.zenesis.qx.remote.test.properties.TestValue", {
  "extend" : qx.core.Object,
  "implement" : [ com.zenesis.qx.remote.test.properties.ITestValue ],
  "construct" : function() {
    var args = qx.lang.Array.fromArguments(arguments);
    args.unshift(arguments);
    this.base.apply(this, args);
    this.initialiseProxy();
 },
  "properties" : {
    "value" : {
      "@" : [ new com.zenesis.qx.remote.annotations.Property().set({"readOnly":true}) ],
      "init" : 0,
      "nullable" : false,
      "apply" : "_applyValue",
      "check" : "Integer",
      "event" : "changeValue"
    }
  },
  "members" : {
    "getValueAsync" : function() {
    return qx.Promise.resolve(this.getValue()).bind(this);
 },
    "_applyValue" : function(value, oldValue, name) {
    this._applyProperty("value", value, oldValue, name);
 }
  },
  "defer" : function(clazz) {
    clazz.$$eventMeta = {};
    clazz.$$methodMeta = {};
    com.zenesis.qx.remote.MProxy.deferredClassInitialisation(clazz);
    qx.lang.Object.mergeWith(clazz.$$properties.value, {"onDemand":false,"isServer":true,"readOnly":true,"sync":"queue","nativeKeyType":true});
    clazz.$$eventMeta.changeValue = {"isServer":true,"isProperty":true};
 }
});
