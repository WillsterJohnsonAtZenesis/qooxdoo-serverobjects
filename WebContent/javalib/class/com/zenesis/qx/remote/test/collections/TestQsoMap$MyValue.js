/**
 * Class generated by Qoxodoo Server Objects com.zenesis.qx.remote.ClassWriter
 * 
 */

qx.Class.define("com.zenesis.qx.remote.test.collections.TestQsoMap$MyValue", {
  "extend" : qx.core.Object,
  "construct" : function() {
    var args = qx.lang.Array.fromArguments(arguments);
    args.unshift(arguments);
    this.base.apply(this, args);
    this.initialiseProxy();
 },
  "properties" : {
    "valueId" : {
      "nullable" : true,
      "apply":"_applyValueId",
      "check":"String",
      "event":"changeValueId"
    }
  },
  "members" : {
    "getValueIdAsync" : function() {
    return qx.Promise.resolve(this.getValueId()).bind(this);
 },
    "_applyValueId" : function(value, oldValue, name) {
    this._applyProperty("valueId", value, oldValue, name);
 }
  },
  "defer" : function(clazz) {
    clazz.$$eventMeta = {};
    clazz.$$methodMeta = {};
    com.zenesis.qx.remote.MProxy.deferredClassInitialisation(clazz);
    qx.lang.Object.mergeWith(clazz.$$properties.valueId, {
      "onDemand" : false,
      "isServer" : true,
      "readOnly" : false,
      "sync":"queue",
      "nativeKeyType" : true
    });
    clazz.$$eventMeta.changeValueId = {
      "isServer" : true,
      "isProperty" : true
    };
 }
});
